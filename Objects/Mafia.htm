<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Mafia.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Mafia.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Jun 12 20:17:02 2019
<BR><P>
<H3>Maximum Stack Usage =        208 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EINT0_IRQHandler &rArr; init &rArr; startday &rArr; endDay &rArr;  endDay (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[35]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC_IRQHandler</a><BR>
 <LI><a href="#[7d]">endDay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d]">endDay</a><BR>
 <LI><a href="#[89]">select_pass</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[89]">select_pass</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT0_IRQHandler</a> from main.o(i.EINT0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[33]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">SystemInit</a> from system_lpc17xx.o(i.SystemInit) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[f]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[34]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[34]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[36]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[38]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[97]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[98]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[99]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[9a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[39]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[9e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[af]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[43]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[b0]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[b1]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[b2]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[b3]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[b4]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[b5]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b6]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[37]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b7]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3b]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b8]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Start_Page &rArr; start_Screen &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[48]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[42]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[ba]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[44]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[90]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))

<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[46]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[7b]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;po_Result
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_two
</UL>

<P><STRONG><a name="[bb]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[be]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;po_Result
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Id
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_select_player
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_player_num
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_doctor
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_Yes_num
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_No_num
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_two
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c4]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c5]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[49]"></a>AF_ConfigPin</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lpc17xx_pinsel.o(i.AF_ConfigPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AF_ConfigPin &rArr; PINSEL_ConfigPin &rArr; set_ResistorMode
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lpc1768_utility.o(i.Delay))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_Screen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marfia_Win
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;killcitizens
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;healUser
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findpass
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findUser
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endDay
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;citizen_Win
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[20]"></a>EINT0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.EINT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = EINT0_IRQHandler &rArr; init &rArr; startday &rArr; endDay &rArr;  endDay (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearEXTIFlag
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>EXTI_ClearEXTIFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc17xx_exti.o(i.EXTI_ClearEXTIFlag))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>EXTI_Config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lpc17xx_exti.o(i.EXTI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_SetPolarity
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ConfigPin
</UL>

<P><STRONG><a name="[50]"></a>EXTI_ConfigPin</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, lpc17xx_exti.o(i.EXTI_ConfigPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EXTI_ConfigPin &rArr; EXTI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>EXTI_Init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc17xx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>EXTI_SetMode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lpc17xx_exti.o(i.EXTI_SetMode))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>

<P><STRONG><a name="[4f]"></a>EXTI_SetPolarity</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lpc17xx_exti.o(i.EXTI_SetPolarity))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>

<P><STRONG><a name="[5d]"></a>EXT_IO_A_CS</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.EXT_IO_A_CS))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[5e]"></a>EXT_IO_B_CS</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.EXT_IO_B_CS))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[5f]"></a>EXT_IO_C_CS</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.EXT_IO_C_CS))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[8d]"></a>EXT_IO_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(i.EXT_IO_init))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>GLCD_clear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, glcd.o(i.GLCD_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_clear &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_pixel
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetY
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetX
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote_screen
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_Screen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_Player
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;police
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;po_Result
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;players_Info
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Id
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marfia_Win
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mafia
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doctor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_two
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_one
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;citizen_Win
</UL>

<P><STRONG><a name="[57]"></a>GLCD_displayChar</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, glcd.o(i.GLCD_displayChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_drawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>

<P><STRONG><a name="[59]"></a>GLCD_displayStringLn</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, glcd.o(i.GLCD_displayStringLn))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote_screen
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_Screen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;star_pass
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;star
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_Player
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;police
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;po_Result
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;players_Info
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Id
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marfia_Win
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mafia
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_select_player
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_player_num
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_doctor
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_Yes_num
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_No_num
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doctor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_two
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_one
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;citizen_Win
</UL>

<P><STRONG><a name="[58]"></a>GLCD_drawChar</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, glcd.o(i.GLCD_drawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_pixel
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetY
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetX
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayChar
</UL>

<P><STRONG><a name="[5a]"></a>GLCD_init</STRONG> (Thumb, 706 bytes, Stack size 8 bytes, glcd.o(i.GLCD_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_init &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>GLCD_setBackColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, glcd.o(i.GLCD_setBackColor))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote_screen
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_Screen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_Player
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;police
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;po_Result
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;players_Info
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Id
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marfia_Win
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mafia
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_player_num
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_Yes_num
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_No_num
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doctor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_two
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_one
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;citizen_Win
</UL>

<P><STRONG><a name="[77]"></a>GLCD_setTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, glcd.o(i.GLCD_setTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote_screen
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_Screen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_Player
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;police
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;po_Result
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;players_Info
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Id
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marfia_Win
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mafia
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_player_num
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_Yes_num
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_No_num
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doctor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_two
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_one
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;citizen_Win
</UL>

<P><STRONG><a name="[5c]"></a>Keypad</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, main.o(i.Keypad))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Keypad &rArr; Keypad_Output_Row_2
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_2
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_1
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Input
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_IO_C_CS
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_IO_B_CS
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_IO_A_CS
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_3
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;killcitizens
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;healUser
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findpass
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findUser
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[8e]"></a>Keypad_DIR_Input</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.Keypad_DIR_Input))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>Keypad_DIR_Output</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(i.Keypad_DIR_Output))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_2
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_1
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_Output_Row_3
</UL>

<P><STRONG><a name="[61]"></a>Keypad_Input</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, main.o(i.Keypad_Input))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[60]"></a>Keypad_Output_Row_1</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, main.o(i.Keypad_Output_Row_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Keypad_Output_Row_1
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_DIR_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[62]"></a>Keypad_Output_Row_2</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, main.o(i.Keypad_Output_Row_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Keypad_Output_Row_2
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_DIR_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[63]"></a>Keypad_Output_Row_3</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, main.o(i.Keypad_Output_Row_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Keypad_Output_Row_3
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_DIR_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[64]"></a>Keypad_Output_Row_4</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, main.o(i.Keypad_Output_Row_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Keypad_Output_Row_4
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_DIR_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
</UL>

<P><STRONG><a name="[4a]"></a>PINSEL_ConfigPin</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lpc17xx_pinsel.o(i.PINSEL_ConfigPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PINSEL_ConfigPin &rArr; set_ResistorMode
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ResistorMode
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PinFunc
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_OpenDrainMode
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AF_ConfigPin
</UL>

<P><STRONG><a name="[69]"></a>Start_Page</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Start_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Start_Page &rArr; start_Screen &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>SystemInit</STRONG> (Thumb, 302 bytes, Stack size 0 bytes, system_lpc17xx.o(i.SystemInit))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>WinCitizens</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.WinCitizens))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WinCitizens &rArr; citizen_Win &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;citizen_Win
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isFin
</UL>

<P><STRONG><a name="[6d]"></a>checkUser</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, main.o(i.checkUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = checkUser &rArr; findUser &rArr; po_Result &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_Player
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;killcitizens
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isFin
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;healUser
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_select_player
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findpass
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findUser
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startday
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endDay
</UL>

<P><STRONG><a name="[6c]"></a>citizen_Win</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, main.o(i.citizen_Win))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = citizen_Win &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinCitizens
</UL>

<P><STRONG><a name="[78]"></a>day_one</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(i.day_one))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = day_one &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startday
</UL>

<P><STRONG><a name="[79]"></a>day_two</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, main.o(i.day_two))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = day_two &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endDay
</UL>

<P><STRONG><a name="[7c]"></a>doctor</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(i.doctor))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = doctor &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;healUser
</UL>

<P><STRONG><a name="[7d]"></a>endDay</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(i.endDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + In Cycle
<LI>Call Chain = endDay &rArr;  endDay (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endDay
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_two
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startday
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endDay
</UL>

<P><STRONG><a name="[7f]"></a>findJob</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, main.o(i.findJob))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = findJob &rArr; player_Job &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Job
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
</UL>

<P><STRONG><a name="[74]"></a>findUser</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(i.findUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = findUser &rArr; po_Result &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;police
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;po_Result
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[71]"></a>findpass</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, main.o(i.findpass))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = findpass &rArr; star_pass &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;star_pass
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[84]"></a>fix_No_num</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, main.o(i.fix_No_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fix_No_num &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
</UL>

<P><STRONG><a name="[85]"></a>fix_Yes_num</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, main.o(i.fix_Yes_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fix_Yes_num &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
</UL>

<P><STRONG><a name="[86]"></a>fix_doctor</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, main.o(i.fix_doctor))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fix_doctor &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;killcitizens
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;healUser
</UL>

<P><STRONG><a name="[87]"></a>fix_player_num</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, main.o(i.fix_player_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fix_player_num &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
</UL>

<P><STRONG><a name="[70]"></a>fix_select_player</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, main.o(i.fix_select_player))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fix_select_player &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[73]"></a>healUser</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, main.o(i.healUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = healUser &rArr; fix_doctor &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_doctor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doctor
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[4c]"></a>init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = init &rArr; startday &rArr; endDay &rArr;  endDay (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startday
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;players_Info
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>isFin</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(i.isFin))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = isFin &rArr; winMafia &rArr; marfia_Win &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;winMafia
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WinCitizens
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[72]"></a>killcitizens</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, main.o(i.killcitizens))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = killcitizens &rArr; fix_doctor &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mafia
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_doctor
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[8c]"></a>mafia</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(i.mafia))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mafia &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;killcitizens
</UL>

<P><STRONG><a name="[40]"></a>main</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; Start_Page &rArr; start_Screen &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad_DIR_Input
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT_IO_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AF_ConfigPin
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ConfigPin
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[91]"></a>marfia_Win</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, main.o(i.marfia_Win))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = marfia_Win &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;winMafia
</UL>

<P><STRONG><a name="[92]"></a>player_Id</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, main.o(i.player_Id))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = player_Id &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
</UL>

<P><STRONG><a name="[80]"></a>player_Job</STRONG> (Thumb, 252 bytes, Stack size 56 bytes, main.o(i.player_Job))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = player_Job &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findJob
</UL>

<P><STRONG><a name="[88]"></a>players_Info</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, main.o(i.players_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = players_Info &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init
</UL>

<P><STRONG><a name="[82]"></a>po_Result</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, main.o(i.po_Result))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = po_Result &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findUser
</UL>

<P><STRONG><a name="[81]"></a>police</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(i.police))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = police &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findUser
</UL>

<P><STRONG><a name="[6e]"></a>select_Player</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(i.select_Player))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = select_Player &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>

<P><STRONG><a name="[89]"></a>select_pass</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, main.o(i.select_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + In Cycle
<LI>Call Chain = select_pass &rArr;  select_pass (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;star
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;player_Id
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findJob
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init
</UL>

<P><STRONG><a name="[93]"></a>star</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.star))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = star &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_pass
</UL>

<P><STRONG><a name="[83]"></a>star_pass</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(i.star_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = star_pass &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findpass
</UL>

<P><STRONG><a name="[6a]"></a>start_Screen</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, main.o(i.start_Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = start_Screen &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Page
</UL>

<P><STRONG><a name="[8a]"></a>startday</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.startday))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = startday &rArr; endDay &rArr;  endDay (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endDay
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;day_one
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkUser
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init
</UL>

<P><STRONG><a name="[7e]"></a>vote</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, main.o(i.vote))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = vote &rArr; fix_player_num &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keypad
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote_screen
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isFin
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_player_num
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_Yes_num
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fix_No_num
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startday
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endDay
</UL>

<P><STRONG><a name="[94]"></a>vote_screen</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(i.vote_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vote_screen &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setTextColor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_setBackColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_displayStringLn
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vote
</UL>

<P><STRONG><a name="[8b]"></a>winMafia</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.winMafia))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = winMafia &rArr; marfia_Win &rArr; GLCD_displayStringLn &rArr; GLCD_displayChar &rArr; GLCD_drawChar &rArr; GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marfia_Win
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isFin
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[68]"></a>set_OpenDrainMode</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, lpc17xx_pinsel.o(i.set_OpenDrainMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_OpenDrainMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
</UL>

<P><STRONG><a name="[66]"></a>set_PinFunc</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, lpc17xx_pinsel.o(i.set_PinFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_PinFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
</UL>

<P><STRONG><a name="[67]"></a>set_ResistorMode</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, lpc17xx_pinsel.o(i.set_ResistorMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_ResistorMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
</UL>

<P><STRONG><a name="[51]"></a>GLCD_SetX</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, glcd.o(i.GLCD_SetX))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GLCD_SetX &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_drawChar
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>

<P><STRONG><a name="[54]"></a>GLCD_SetY</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, glcd.o(i.GLCD_SetY))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GLCD_SetY &rArr; wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_drawChar
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>

<P><STRONG><a name="[5b]"></a>delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, glcd.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_init
</UL>

<P><STRONG><a name="[95]"></a>ssp_send</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, glcd.o(i.ssp_send))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_pixel
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>

<P><STRONG><a name="[52]"></a>wr_cmd</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, glcd.o(i.wr_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wr_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_drawChar
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetY
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetX
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>

<P><STRONG><a name="[53]"></a>wr_dat</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, glcd.o(i.wr_dat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wr_dat
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetY
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetX
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_init
</UL>

<P><STRONG><a name="[56]"></a>wr_pixel</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, glcd.o(i.wr_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wr_pixel
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_drawChar
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_clear
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
